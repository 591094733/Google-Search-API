{"name":"Google-search-api","body":"Google Search API\r\n=====\r\n\r\nGoogle Search API is a python based library for searching various functionalities of google.  It uses screen scraping to retrieve the results, and thus is unreliable if the way google's web pages are returned change in the future.\r\n\r\n*Disclaimer: This software uses screen scraping to retreive search results from google.com, and therefore this software may stop working at any given time.  Use this software at your own risk. I assume no responsibility for how this software API is used by others.*\r\n\r\n## Google Web Search\r\nYou can search google web in the following way:\r\n\r\n```python\r\nsearch_results = Google.search(\"This is my query\")\r\n```\r\n\r\n`search_results` will contain a list of `GoogleResult` objects\r\n\r\n```python\r\nGoogleResult:\r\n    self.name # The title of the link\r\n    self.link # The link url\r\n    self.description # The description of the link\r\n    self.thumb # The link to a thumbnail of the website (not implemented yet)\r\n    self.cached # A link to the cached version of the page\r\n    self.page # What page this result was on (When searching more than one page)\r\n    self.index # What index on this page it was on\r\n```\r\n    \r\n\r\n## Google Calculator\r\nAttempts to search google calculator for the result of an expression. Returns a `CalculatorResult` if successful or `None` if it fails.\r\n\r\n```python\r\nGoogle.calculate(\"157.3kg in grams\")\r\n```\r\n\r\n```python\r\n{'expr': u'157.3 kilograms',\r\n 'fullstring': u'157.3 kilograms = 157\\xa0300 grams',\r\n 'result': u'157 300 grams',\r\n 'unit': u'grams',\r\n 'value': u'157300'}\r\n```\r\n\r\n    \r\n```python\r\nGoogle.calculate(\"cos(25 pi) / 17.4\")\r\n```\r\n\r\n```python\r\n{'expr': u'cos(25 * pi) / 17.4',\r\n 'fullstring': u'cos(25 * pi) / 17.4 = -0.0574712644',\r\n 'result': u'-0.0574712644',\r\n 'unit': None,\r\n 'value': u'-0.0574712644'}\r\n```\r\n    \r\n## Google Image Search\r\nSearches google images for a list of images.  Image searches can be filtered to produce better results.\r\n\r\nPerform a google image search on \"banana\" and filter it:\r\n\r\n```python\r\noptions = ImageOptions()\r\noptions.image_type = ImageType.CLIPART\r\noptions.larger_than = LargerThan.MP_4\r\noptions.color = \"green\"\r\nresults = Google.search_images(\"banana\", options)\r\n```\r\n    \r\nSample Result:\r\n\r\n```python\r\n{'domain': u'exitrealworld.com',\r\n 'filesize': u'4054k',\r\n 'format': u'jpg',\r\n 'height': u'3103',\r\n 'index': 0,\r\n 'link': u'http://www.exitrealworld.com/tools_v2/resources/9e55471ba84686ade677ffe595c45992/upload_images/YELLOW_BANANA.jpg',\r\n 'name': u'Lib Tech Skate Banana BTX',\r\n 'page': 0,\r\n 'thumb': u'http://t3.gstatic.com/images?q=tbn:ANd9GcRzvAUW0en9eZTag3giWelcQ_xbrnBMXVChb3RU3v4HtEgxN3RMS0bSdidf',\r\n 'width': u'3104'}\r\n```\r\n     \r\nFilter options:\r\n\r\n```python        \r\nImageOptions:\r\n    image_type # face, body, clipart, line drawing\r\n    size_category # large, small, icon\r\n    larger_than # the well known name of the smallest image size you want\r\n    exact_width # the exact width of the image you want\r\n    exact_height # the exact height of the image you want\r\n    color_type # color, b&w, specific\r\n    color # blue, green, red\r\n```\r\n        \r\nEnums of values that can be used to filter image searches:\r\n\r\n```python\r\nclass ImageType:\r\n    NONE = None\r\n    FACE = \"face\"\r\n    PHOTO = \"photo\"\r\n    CLIPART = \"clipart\"\r\n    LINE_DRAWING = \"lineart\"\r\n    \r\nclass SizeCategory:\r\n    NONE = None\r\n    ICON = \"i\"\r\n    LARGE = \"l\"\r\n    MEDIUM = \"m\"\r\n    SMALL = \"s\"\r\n    LARGER_THAN = \"lt\"\r\n    EXACTLY = \"ex\"\r\n    \r\nclass LargerThan:\r\n    NONE = None\r\n    QSVGA = \"qsvga\" # 400 x 300\r\n    VGA = \"vga\"     # 640 x 480\r\n    SVGA = \"svga\"   # 800 x 600\r\n    XGA = \"xga\"     # 1024 x 768\r\n    MP_2 = \"2mp\"    # 2 MP (1600 x 1200)\r\n    MP_4 = \"4mp\"    # 4 MP (2272 x 1704)\r\n    MP_6 = \"6mp\"    # 6 MP (2816 x 2112)\r\n    MP_8 = \"8mp\"    # 8 MP (3264 x 2448)\r\n    MP_10 = \"10mp\"  # 10 MP (3648 x 2736)\r\n    MP_12 = \"12mp\"  # 12 MP (4096 x 3072)\r\n    MP_15 = \"15mp\"  # 15 MP (4480 x 3360)\r\n    MP_20 = \"20mp\"  # 20 MP (5120 x 3840)\r\n    MP_40 = \"40mp\"  # 40 MP (7216 x 5412)\r\n    MP_70 = \"70mp\"  # 70 MP (9600 x 7200)\r\n\r\nclass ColorType:\r\n    NONE = None\r\n    COLOR = \"color\"\r\n    BLACK_WHITE = \"gray\"\r\n    SPECIFIC = \"specific\"\r\n```\r\n\r\n## Google Currency Converter (Exchange Rates)\r\nConvert between one currency and another using google calculator. Results are real time and can change at any time based on the current exchange rate according to google.\r\n\r\nConvert 5 US Dollars to Euros using the official 3 letter currency acronym:\r\n\r\n```python\r\neuros = Google.convert_currency(5.0, \"USD\", \"EUR\")\r\nprint \"5.0 USD = {0} EUR\".format(euros)\r\n```\r\n\r\n```python\r\n5.0 USD = 3.82350692 EUR\r\n```\r\n\r\nConvert 1000 Japanese Yen to US Dollars:\r\n\r\n```python\r\nyen = Google.convert_currency(1000, \"yen\", \"us dollars\")\r\nprint \"1000 yen = {0} us dollars\".format(yen)\r\n```\r\n\r\n```python\r\n1000 yen = 12.379 us dollars\r\n```\r\n\r\nInstead you can get the exchange rate which returns what 1 `from_currency` equals in `to_currency` and do your own math:\r\n\r\n```python\r\nrate = Google.exchange_rate(\"dollars\", \"pesos\")\r\nprint \"dollars -> pesos exchange rate = {0}\".format(rate)\r\n```\r\n\r\n```python\r\ndollars -> pesos exchange rate = 13.1580679\r\n```\r\n\r\nPerform your own math. The following 2 statements are equal:\r\n\r\n```python\r\n5.0 * Google.exchange_rate(\"USD\", \"EUR\")\r\n```\r\n\r\n```python\r\nGoogle.convert_currency(5.0, \"USD\", \"EUR\")\r\n```\r\n\r\nAs a side note, `convert_currency` is always more accurate than performing your own math on `exchange_rate` because of possible rounding errors. However if you have more than one value to convert it is best to call `exchange_rate` and cache the result to use for multiple calculations instead of querying the google server for each one.\r\n","tagline":"Python based api for searching google web, images, calc, and currency conversion.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}